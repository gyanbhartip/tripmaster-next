# server {
#     listen 80;

#     server_name localhost;

#     location / {
#         proxy_pass http://bun:3000;  # Bun server name and port
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Static assets cache
#     location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
#         expires 30d;
#         add_header Cache-Control "public, immutable";
#         proxy_pass http://bun:3000;
#     }

#     # Optional: enable nginx caching
#     proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m use_temp_path=off;
#     proxy_cache my_cache;
#     proxy_cache_valid 200 302 10m;
#     proxy_cache_valid 404 1m;
# }

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs_upstream {
  server nextjs:3000;

  # We could add additional servers here for load-balancing
}

# ---------- MAIN SERVER CONFIG ----------
server {
    listen 80;
    server_name _;
    server_tokens off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

    location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
    }

    location / {
      proxy_pass http://nextjs_upstream;
    }

#     # Redirect HTTP to HTTPS (optional, requires certs setup)
#     # return 301 https://$host$request_uri;

#     # Reverse proxy to Bun
#     location / {
#         # root /usr/share/nginx/html;
#         # proxy_pass http://bun:3000;
#         # try_files $uri /index.html;
#         # try_files $uri $uri/ =404;


#         proxy_buffering off;

#         # Preserve headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # WebSocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";

#         #This tells Bun: "Don't compress it, let NGINX do it if needed."
#         proxy_set_header Accept-Encoding "";

#         # Enable caching for successful responses
#         proxy_cache my_cache;
#         proxy_cache_valid 200 302 10m;
#         proxy_cache_valid 404 1m;
#         proxy_cache_bypass $http_upgrade;

#         limit_req zone=one burst=20 nodelay;

#         # Security headers
#         add_header X-Frame-Options "SAMEORIGIN" always;
#         add_header X-Content-Type-Options "nosniff" always;
#         add_header X-XSS-Protection "1; mode=block" always;
#         add_header Referrer-Policy "no-referrer-when-downgrade" always;
#         add_header Content-Security-Policy "default-src 'self'" always;
#         add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
#     }
#     add_header Content-Security-Policy "connect-src 'self' https://*.ingest.sentry.io $host $host:3000; font-src 'self' data: https://fonts.googleapis.com https://fonts.gstatic.com $host $host:3000; frame-src 'self' $host $host:3000; script-src 'self' 'unsafe-eval' blob: $host $host:3000; style-src 'self' 'unsafe-inline' blob: https://fonts.googleapis.com $host $host:3000 ; img-src 'self' data: https://fonts.gstatic.com $host $host:3000; media-src 'self' https://youtube.googleapis.com https://www.youtube.com $host $host:3000; default-src 'self' $host $host:3000; worker-src 'self' blob: $host $host:3000; object-src 'self';" always;


#     # ---------- ERROR HANDLING ----------
#     # error_page 404 /404.html;
#     # location = /404.html {
#     #     internal;
#     #     root /usr/share/nginx/html;
#     # }

#     # error_page 500 502 503 504 /50x.html;
#     # location = /50x.html {
#     #     internal;
#     #     root /usr/share/nginx/html;
#     # }
}
